{"version":3,"sources":["contacts/images/male.svg","contacts/images/female.svg","contacts/images/anonimus.svg","logo.svg","contacts/contact.js","contacts/contacts.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Cont","props","className","firstName","lastName","phone","src","gender","alt","Contacts","state","contacts","person","st","search","gend","search2","setImg","maleLogo","femaleLogo","anonimus","changeTitle","event","value","target","setState","find","count","word","toLowerCase","filter","e","includes","console","log","this","placeholder","velue","title","onChange","onClick","map","contact","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fc8dedb6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/male.07582995.svg\";","module.exports = __webpack_public_path__ + \"static/media/female.5c87994c.svg\";","module.exports = __webpack_public_path__ + \"static/media/anonimus.5d21e4c0.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\n\nconst Cont = (props) => (\n  <div className=\"wrap\">\n    <span className=\"item\">{props.firstName}</span>\n    <span className=\"item\">{props.lastName}</span>\n    <span className=\"item phone\">{props.phone}</span>\n    <img className=\"gender-icon\" src={props.gender} alt=\"gender-img\" />\n  </div>\n);\nexport default Cont;\n","import React, { Component } from \"react\";\nimport Cont from \"./contact\";\nimport maleLogo from \"./images/male.svg\";\nimport femaleLogo from \"./images/female.svg\";\nimport anonimus from \"./images/anonimus.svg\";\n\nclass Contacts extends Component {\n  state = {\n    contacts: [\n      {\n        firstName: \"Барней\",\n        lastName: \"Стинсовський\",\n        phone: \"+380956319521\",\n        gender: \"male\",\n      },\n      {\n        firstName: \"Робін\",\n        lastName: \"Щербатська\",\n        phone: \"+380931460123\",\n        gender: \"female\",\n      },\n      {\n        firstName: \"Анонімний\",\n        lastName: \"Анонімус\",\n        phone: \"+380666666666\",\n      },\n      {\n        firstName: \"Лілія\",\n        lastName: \"Олдровна\",\n        phone: \"+380504691254\",\n        gender: \"female\",\n      },\n      {\n        firstName: \"Маршен\",\n        lastName: \"Еріксонян\",\n        phone: \"+380739432123\",\n        gender: \"male\",\n      },\n      {\n        firstName: \"Теодор\",\n        lastName: \"Мотсбес\",\n        phone: \"+380956319521\",\n        gender: \"male\",\n      },\n    ],\n    person: \"Default\",\n    st: \"false\",\n    search: \"\",\n    gend: \"\",\n    search2: \"\",\n  };\n\n  setImg = (gender) => {\n    if (gender === \"male\") {\n      return maleLogo;\n    } else if (gender === \"female\") {\n      return femaleLogo;\n    } else {\n      return anonimus;\n    }\n  };\n  changeTitle = (event) => {\n    const { value } = event.target;\n    this.setState({\n      person: value,\n    });\n  };\n\n  find = () => {\n    let count = 0;\n    let word = this.state.person.toLowerCase();\n    this.state.contacts.filter((e) => {\n      if (e.lastName.toLowerCase().includes(word)) {\n        this.setState({\n          search: \"\" + e.firstName + \" \" + e.lastName + \" \" + e.phone,\n          gend: e.gender,\n          st: \"true\",\n        });\n      } else if (e.firstName.toLowerCase().includes(word)) {\n        this.setState({\n          search: \"\" + e.firstName + \" \" + e.lastName + \" \" + e.phone,\n          gend: e.gender,\n          st: \"true\",\n        });\n      } else if (e.phone.toLowerCase().includes(word)) {\n        if (count === 0) {\n          count += 1;\n          console.log(\"h\");\n          this.setState({\n            search: \"\" + e.firstName + \" \" + e.lastName + \" \" + e.phone,\n            gend: e.gender,\n            st: \"true\",\n          });\n        } else if (count === 1) {\n          this.setState({\n            search2: \"\" + e.firstName + \" \" + e.lastName + \" \" + e.phone,\n            gend: e.gender,\n            st: \"true\",\n          });\n        }\n      }\n    });\n  };\n\n  render() {\n    if (this.state.st === \"false\") {\n      return (\n        <div className=\"wrapper\">\n          <input\n            className=\"input\"\n            placeholder=\"find person\"\n            velue={this.state.title}\n            onChange={this.changeTitle}\n          ></input>\n          <button className=\"btn\" onClick={this.find}>\n            submit\n          </button>\n          {this.state.contacts.map((contact) => (\n            <Cont\n              firstName={contact.firstName}\n              lastName={contact.lastName}\n              phone={contact.phone}\n              gender={this.setImg(contact.gender)}\n            />\n          ))}\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"response\">\n          <p className=\"finded\">\n            {this.state.search}\n            <img\n              className=\"gender-icon\"\n              src={this.setImg(this.state.gend)}\n              alt=\"img\"\n            />\n          </p>\n          <p className=\"finded2\">\n            {this.state.search2}\n            <img\n              className=\"gender-icon\"\n              src={this.setImg(this.state.gend)}\n              alt=\"img\"\n            />\n          </p>\n        </div>\n      );\n    }\n  }\n}\nexport default Contacts;\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Contacts from \"./contacts/contacts\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Contacts />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}